name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly on Mondays at 2:30 AM
    - cron: '30 2 * * 1'

# Cancel in-progress runs for the same branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  # Code quality checks run independently
  lint:
    name: Lint (clj-kondo)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: DeLaGuardo/setup-clojure@12.5
        with:
          clj-kondo: 'latest'
          
      - name: Run clj-kondo
        run: make lint-ci

  format:
    name: Format Check (cljfmt)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: ${{ runner.os }}-clojure-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-
            
      - name: Check formatting
        run: make fmt-check

  test-clj:
    name: Clojure Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: ${{ runner.os }}-clojure-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-clojure-
            
      - name: Run Clojure tests
        run: make cljtest

  test-cljs:
    name: ClojureScript Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest'
          
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: ${{ runner.os }}-cljstest-${{ hashFiles('deps.edn') }}
          restore-keys: |
            ${{ runner.os }}-cljstest-
            
      - name: Install npm dependencies
        run: npm ci || npm install
        
      - name: Check Chrome availability
        id: chrome-check
        run: |
          if command -v chromium-browser &> /dev/null || command -v chromium &> /dev/null || command -v google-chrome &> /dev/null; then
            echo "chrome_available=true" >> $GITHUB_OUTPUT
          else
            echo "chrome_available=false" >> $GITHUB_OUTPUT
            echo "Chrome not available, will skip browser tests"
          fi
          
      - name: Run ClojureScript tests
        run: |
          if [[ "${{ steps.chrome-check.outputs.chrome_available }}" == "true" ]]; then
            echo "Note: ClojureScript tests currently disabled due to ESM conversion"
            echo "Running JavaScript ESM tests instead"
            make esm-test
          else
            echo "Skipping browser tests due to missing Chrome"
            echo "Running Node.js ESM tests only"
            make esm-test-node
          fi

  test-js-esm:
    name: JavaScript ESM Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - uses: DeLaGuardo/setup-clojure@12.5
        with:
          cli: 'latest'
          
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.m2
            ~/.gitlibs
          key: ${{ runner.os }}-js-esm-${{ hashFiles('deps.edn', 'package.json') }}
          restore-keys: |
            ${{ runner.os }}-js-esm-
            
      - name: Install npm dependencies
        run: npm ci || npm install
        
      - name: Build ESM modules
        run: make js-package
        
      - name: Run JavaScript ESM functionality tests
        run: make esm-test

  # This job ensures all tests pass
  test-status:
    name: Test Status
    needs: [lint, format, test-clj, test-cljs, test-js-esm]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test results
        run: |
          if [[ "${{ needs.lint.result }}" != "success" || 
                "${{ needs.format.result }}" != "success" ||
                "${{ needs.test-clj.result }}" != "success" ||
                "${{ needs.test-cljs.result }}" != "success" ||
                "${{ needs.test-js-esm.result }}" != "success" ]]; then
            echo "One or more tests failed"
            exit 1
          fi
          echo "All tests passed!"